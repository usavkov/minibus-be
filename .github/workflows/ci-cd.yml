name: Run CI/CD action
run-name: CI/CD action on "${{ github.event_name }}" (by ${{ github.actor }})
on: [push, pull_request]
jobs:
  CI_NodeJS:
    env: 
      UNIT_TEST_COVERAGE_DIR: artifacts/coverage-jest/lcov-report/
    runs-on: ubuntu-latest
    # strategy:
    #   matrix:
    #     node-version: [14.x, 16.x, 18.x]
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js version - ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          # node-version: ${{ matrix.node-version }}
          node-version: 16.x

      - name: Install dependencies
        run: yarn

      # - name: Run linter check
      #   run: yarn lint

      # - name: Run unit tests and create coverage report
      #   run: yarn test:cov

      # - name: Publish unit tests report as artifact
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: unit-tests-coverage-report
      #     path: ${{ env.UNIT_TEST_COVERAGE_DIR }}

      - name: Publish yarn.lock file
        uses: actions/upload-artifact@v3
        with:
          name: yarn.lock
          path: yarn.lock

  CD:
    runs-on: ubuntu-latest
    needs: CI_NodeJS
    # if : ${{ github.ref_name == 'main' }}
    env:
      IMAGE_TAG_NAME: ${{ github.repository }}

    steps:
      - uses: actions/checkout@v3

      - name: Download yarn.lock artifact
        uses: actions/download-artifact@v3
        with:
          name: yarn.lock
          path: yarn.lock

      - run: ls

      # - name: Build docker image
      #   run: docker build . --tag ${{ env.IMAGE_TAG_NAME }}

      - name: Login DockerHub
        run: echo ${{ secrets.DOCKER_GITHUB_TOKEN }} | docker login -u ${{ secrets.DOCKER_GITHUB_USERNAME }} --password-stdin

